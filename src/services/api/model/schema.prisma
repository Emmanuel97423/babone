datasource db {
    provider = "postgresql"
    url      = "postgresql://postgres:8p2arY6OD03VhUTs@db.blbjfpyjxzhppkmopebe.supabase.co:5432/postgres?pgbouncer=true"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    email     String   @unique
    name      String?
    role      Role     @default(USER)
    // posts     Post[]
}

model Product {
    id            Int         @id @default(autoincrement())
    name          String      @db.VarChar(255)
    category      Category    @relation(fields: [categoryId], references: [id])
    categoryId    Int
    subCategory   Subcategory @relation(fields: [subCategoryId], references: [id])
    subCategoryId Int
    description   String
    images        String[]
    variant       Variant[]
}

model Variant {
    id                Int                 @id @default(autoincrement())
    sku               String?
    ean               Int?
    name              String              @db.VarChar(255)
    product           Product?            @relation(fields: [productId], references: [id])
    productId         Int?
    priceHt           Int
    tva               Int
    priceTtc          Int
    stock             Int
    brand             String?
    manufacturer      String?
    weight            Int
    height            Int
    width             Int
    image             String
    variantProperties VariantProperties[]
}

model Properties {
    id                Int                 @id @default(autoincrement())
    name              String              @db.VarChar(255)
    value             String              @db.VarChar(255)
    variantProperties VariantProperties[]
}

model VariantProperties {
    id         Int        @id @default(autoincrement())
    variant    Variant    @relation(fields: [variantId], references: [id])
    variantId  Int
    property   Properties @relation(fields: [propertyId], references: [id])
    propertyId Int
}

model Category {
    id          Int           @id @default(autoincrement())
    name        String        @db.VarChar(255)
    subcategory Subcategory[]
    product     Product[]
}

model Subcategory {
    id         Int       @id @default(autoincrement())
    name       String    @db.VarChar(255)
    category   Category  @relation(fields: [categoryId], references: [id])
    categoryId Int
    product    Product[]
}

// model Post {
//     id        Int      @id @default(autoincrement())
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
//     published Boolean  @default(false)
//     title     String   @db.VarChar(255)
//     author    User?    @relation(fields: [authorId], references: [id])
//     authorId  Int?
// }

enum Role {
    USER
    ADMIN
}
